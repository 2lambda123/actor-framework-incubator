// clang-format off
// DO NOT EDIT: this file is auto-generated by caf-generate-enum-strings.
// Run the target update-enum-strings if this file is out of sync.
#include "caf/config.hpp"
#include "caf/string_view.hpp"

CAF_PUSH_DEPRECATED_WARNING

#include "caf/net/basp/message_type.hpp"

#include <string>

namespace caf {
namespace net {
namespace basp {

std::string to_string(message_type x) {
  switch(x) {
    default:
      return "???";
    case message_type::handshake:
      return "handshake";
    case message_type::actor_message:
      return "actor_message";
    case message_type::resolve_request:
      return "resolve_request";
    case message_type::resolve_response:
      return "resolve_response";
    case message_type::monitor_message:
      return "monitor_message";
    case message_type::down_message:
      return "down_message";
    case message_type::heartbeat:
      return "heartbeat";
  };
}

bool from_string(string_view in, message_type& out) {
  if (in == "handshake") {
    out = message_type::handshake;
    return true;
  } else if (in == "actor_message") {
    out = message_type::actor_message;
    return true;
  } else if (in == "resolve_request") {
    out = message_type::resolve_request;
    return true;
  } else if (in == "resolve_response") {
    out = message_type::resolve_response;
    return true;
  } else if (in == "monitor_message") {
    out = message_type::monitor_message;
    return true;
  } else if (in == "down_message") {
    out = message_type::down_message;
    return true;
  } else if (in == "heartbeat") {
    out = message_type::heartbeat;
    return true;
  } else {
    return false;
  }
}

bool from_integer(std::underlying_type_t<message_type> in,
                  message_type& out) {
  auto result = static_cast<message_type>(in);
  switch(result) {
    default:
      return false;
    case message_type::handshake:
    case message_type::actor_message:
    case message_type::resolve_request:
    case message_type::resolve_response:
    case message_type::monitor_message:
    case message_type::down_message:
    case message_type::heartbeat:
      out = result;
      return true;
  };
}

} // namespace basp
} // namespace net
} // namespace caf

CAF_POP_WARNINGS
